# Generated by Django 4.2.15 on 2024-09-03 23:55

import custom_types.enums
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import enumfields.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Educator',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('subject', enumfields.fields.EnumField(enum=custom_types.enums.Subject, max_length=20)),
            ],
            options={
                'db_table': 'educators',
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('number_of_children', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'parents',
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('age', models.PositiveIntegerField()),
                ('grade_level', models.PositiveIntegerField()),
                ('sensory_preference', enumfields.fields.EnumField(enum=custom_types.enums.SensoryPreferences, max_length=20)),
                ('communication_preference', enumfields.fields.EnumField(enum=custom_types.enums.CommunicationPreferences, max_length=20)),
                ('attention_span', enumfields.fields.EnumField(enum=custom_types.enums.AttentionSpan, max_length=10)),
                ('reading_writing_skills', enumfields.fields.EnumField(enum=custom_types.enums.ReadingWritingSkills, max_length=12)),
                ('math_skills', enumfields.fields.EnumField(enum=custom_types.enums.MathSkills, max_length=12)),
                ('technology_comfort', enumfields.fields.EnumField(enum=custom_types.enums.TechComfortLevel, max_length=20)),
                ('interests', enumfields.fields.EnumField(enum=custom_types.enums.ChildInterests, max_length=30)),
                ('parent_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.parent')),
            ],
            options={
                'db_table': 'students',
            },
            bases=('users.user',),
        ),
    ]
